:

# locale preference
LC_MESSAGES=C
LC_TIME=C
LC_NUMERIC=C
LC_COLLATE=ko_KR.UTF-8
export LC_MESSAGES LC_TIME LC_NUMERIC LC_COLLATE

# user path
case :"$PATH": in *:"$HOME"/bin:*);;*)PATH="$HOME"/bin:"$PATH";;esac
case :"$PATH": in *:"$HOME"/.local/bin:*);;*)PATH="$HOME"/.local/bin:"$PATH";;esac
case :"$PATH": in *:"$HOME"/.cargo/bin:*);;*)PATH="$HOME"/.cargo/bin:"$PATH";;esac
export PATH

# return if not interactive
case $- in *i*|*l*);;*)return 0;;esac

# guess shell type from '$0'
case $0 in
  -zsh|-zsh-static|zsh|zsh-static|*/zsh|*/zsh-static) _ishrc_flavour=zsh ;;
  -kzh|ksh|*/ksh) _ishrc_flavour=ksh ;;
  -sh|sh|*/sh) _ishrc_flavour=sh ;;
  -bash|bash|*/bash) _ishrc_flavour=bash ;;
  *) # if $0 test fails
    if [ ! -z "$BASH_VERSION" ]; then _ishrc_flavour=bash
    elif [ ! -z "$ZSH_VERSION" ]; then _ishrc_flavour=zsh
    elif [ ! -z "$KSH_VERSION" ]; then _ishrc_flavour=ksh
    else _ishrc_flavour=sh
    fi ;;
esac

case $_ishrc_flavour in
  zsh)
    bindkey -A emacs main
    setopt ignoreeof null_glob
    PS1='%m:%.%# ' ;;
  bash)
    bind "set show-all-if-ambiguous on"
    bind \\C-o:menu-complete
    PS1='\h:\W\$ ' ;;
  *) # ksh, sh
    set -o emacs -o ignoreeof 2>/dev/null || true
    if [ 0 -eq "`id -u`" ]; then _r='#'; fi
    _h=`hostname`; PS1='${_h%%.*}:${PWD##*/}${_r-$} '; unset _r _h ;;
esac

# slight performance
unset HISTFILE
IGNOREEOF=4

#####################################################
# anaconda
test -f /opt/conda/etc/profile.d/conda.sh && . /opt/conda/etc/profile.d/conda.sh
#####################################################

#####################################################
alias i='. $HOME/.ishrc'
alias ii='exec env -u TMOUT $SHELL --noprofile --rcfile $HOME/.ishrc -i'
\ls -F -w > /dev/null 2>&1 && alias ls='\ls -F -w' 
\ls -NF --show-control-chars --color=auto > /dev/null 2>&1 && \
  alias ls='\ls -NF --show-control-chars'
alias ll='ls -al'
alias lc='ls -NF --color=auto'
alias cp='\cp -i'
alias mv='\mv -i'
alias rm='\rm -i'
alias cpV='rsync --partial --progress --append'
alias mvV='rsync --partial --progress --append --remove-sent-files'
alias sudo='sudo -H'
alias lsof='sudo lsof -n -P'
# lsof, find processes using a specific tcp port
_lsof_port_listeners(){(
    port=$1
    shift
    # disable uid, dns, port name resolv
    lsof -l -n -P -i:$port
)}
alias lsof-port-listeners=_lsof_port_listeners
alias vimless='/usr/share/vim/vim??/macros/less.sh'

alias unlock-sessions='loginctl unlock-sessions'
alias inspect-checkpoint='python3 -mtensorflow.python.tools.inspect_checkpoint --file_name '
###alias rsync-events="rsync -q -rtvP --delete --append-verify --include='*/' --include='events.*' --exclude='*' "
## consider `--relative` for rsync-events
alias rsync-events="rsync -q -rtvP \
        --delete \
        --append-verify \
        --prune-empty-dirs \
        --min-size 80 \
        --include='*/' \
        --include='events.*' \
        --exclude='*'"
alias nethack='docker run --name nethack --rm -it matsuu/nethack '
alias vim8='docker run -ti --rm -v $(pwd):$(pwd) -v /data:/data -w $(pwd) --entrypoint vim vim-codebreak'
alias vim-codebreak='vim8 -c VimGameCodeBreak '
# disable ls color
alias ls='\ls -F'
# disable touchpad
alias notouch='synclient TouchpadOff=1'
# remap key capslock as control
alias nocaps='setxkbmap -layout us -option ctrl:nocaps'
# erase = del, disable ^\
alias noquit='stty erase  quit undef'
# kor
alias kor='export LANG=ko_KR.UTF-8'
# nosync
alias sync='echo -n "Sync? "; read yn; case $yn in [Yy]) /bin/sync;; esac;'

unalias mosh 2>/dev/null || true
_mosh(){ command mosh --server='env LANG="$(locale -a|grep -E '"'"'(ko_|en_).*\.(UTF-8|utf8)'"'"'|sort|tail -1)" mosh-server -i 0.0.0.0 ||/usr/local/bin/mosh-server -i 0.0.0.0' "$@"; }
alias mosh=_mosh

_tightrun(){
    cgexec -g memory:tight /bin/echo || (
      sudo cgcreate -t $USER:$USER -a $USER:$USER -g memory:tight
      sudo cgset -r memory.limit_in_bytes=15g tight )
    cgexec -g memory:tight "$@"
}
alias tightrun='_tightrun '

unalias timeout 2>/dev/null || true
if ! timeout --version >/dev/null 2>&1
then
    _timeout(){
        local s="$1"
        shift
        "$@" &
        (sleep $s; kill $! 2>/dev/null) || :
    }
    alias timeout=_timeout
fi

# bash/zsh completion behavior simulation
alias zsh-like='if [ ! -z "$BASH_VERSION" ]; then bind "set show-all-if-ambiguous on" ; bind "TAB:menu-complete" ; fi'
alias bash-like='autoload -U compinit; compinit; zstyle ":completion:*:*:*:*:*" menu select; setopt autolist; unsetopt menucomplete; setopt noautomenu'

## ## trick from: https://askubuntu.com/a/379282
## =() { echo "$(($@))" }

#####################################################

### trusted tmux socket path
if test -d /run/user/$(id -u)
then
  mkdir -p /run/user/$(id -u)/tmux
  TMUX_TMPDIR=/run/user/$(id -u)/tmux
  export TMUX_TMPDIR
fi

#####################################################

echo "$(date +%s.%N) [Loading profile.d aliases ...]" 1>&2
for rc in $HOME/.local/etc/profile.d/_*.sh; do
  case $rc in
    *~|*.bak|*.orig|*.old|*/make.sh);; # skip backup files
    *) if test -f $rc
       then
         printf "${_green}.${_nocolor}" | cat -u 1>&2 2>/dev/null
	 . $rc
       fi;;
  esac
done

echo "."

echo "$(date +%s.%N) [Loading .aliases ...]" 1>&2
for rc in $HOME/.aliases*; do
  case $rc in
    *~|*.bak|*.orig|*.old);;
    *) test -s $rc && . $rc;;
  esac
done


# zsh nullglob workaround (to make it more like bash)
setopt no_match no_nullglob >/dev/null 2>&1 || true


noquit

echo ""
